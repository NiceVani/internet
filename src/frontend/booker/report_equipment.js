document.addEventListener("DOMContentLoaded", function () {
    const reportForm = document.getElementById("reportForm");
    const equipmentSelect = document.getElementById("equipment");
    const roomSelect = document.getElementById("room");
    const detailsSelect = document.getElementById("details");
    const imageInput = document.getElementById("image");
    const previewImage = document.getElementById("preview");

    if (!reportForm || !equipmentSelect || !roomSelect || !detailsSelect || !imageInput || !previewImage) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö");
        return;
    }

    // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
    reportForm.addEventListener("submit", async function (event) {
        event.preventDefault();
    
        const equipment = equipmentSelect.value;
        const room = roomSelect.value;
        const details = detailsSelect.value;
        const additionalText = document.getElementById("additionalText").value || null;
        const fileInput = imageInput.files[0];
    
        if (!equipment || !room || !details) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }
    
        try {
            // 1) getEquipmentId, getRoomId
            const equipmentId = await getEquipmentId(equipment);
            const roomId      = await getRoomId(room);
            if (!equipmentId || !roomId) {
                alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å");
                return;
            }
    
            // 2) generateRepairNumber
            const repairNumber = await generateRepairNumber(roomId, equipmentId);
            const parts = repairNumber.split("-");
            const nextNumber = parts[parts.length - 1]; // ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢
    
            // 3) ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏ß‡∏•‡∏≤
            const repairDate = new Date().toISOString().slice(0, 19).replace("T", " ");
    
            // (‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å path)
            let imagePath = "";
    
            // **‡∏™‡∏£‡πâ‡∏≤‡∏á formData** ‡πÅ‡∏Ñ‡πà 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            const formData = new FormData();
            // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå => ‡πÉ‡∏™‡πà‡∏•‡∏á formData
            if (fileInput) {
                formData.append("image", fileInput);
            }
    
            // ‡πÉ‡∏™‡πà‡∏ü‡∏¥‡∏•‡∏î‡πå sessionUserId, nextNumber
            formData.append("sessionUserId", sessionUserId);  
            formData.append("nextNumber",   nextNumber);
    
            // 4) ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ fileInput => upload (POST /uploadReportImage)
            if (fileInput) {
                const uploadResponse = await fetch("http://localhost:3000/uploadReportImage", {
                    method: "POST",
                    body: formData
                });
    
                const uploadResult = await uploadResponse.json();
                if (uploadResponse.ok && uploadResult.filePath) {
                    // ‡πÄ‡∏ä‡πà‡∏ô "/storage/equipment_img/64312995_4.jpg"
                    imagePath = uploadResult.filePath; 
                } else {
                    alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û");
                    return;
                }
            }
    
            // 5) ‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à => ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            const reportData = {
                repair_number: repairNumber,
                repair_date:   repairDate,
                student_id:    sessionUserId,
                equipment_id:  equipmentId,
                room_id:       roomId,
                damage:        details,
                damage_details: additionalText,
                repair_status:  "‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°",
                image_path:     imagePath
            };
    
            const response = await fetch("http://localhost:3000/reportIssue", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(reportData)
            });
    
            if (response.ok) {
                alert("‚úÖ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                window.location.reload();
            } else {
                alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤");
            }
        } catch (error) {
            console.error("‚ùå Error:", error);
            alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
        }
    });
    
    

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°" ‡∏ï‡∏≤‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    equipmentSelect.addEventListener("change", function () {
        const equipment = equipmentSelect.value;
        detailsSelect.innerHTML = '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>';

        const problems = {
            "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü": ["‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏Ç‡∏≤‡∏î", "‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏´‡∏•‡∏ß‡∏°"],
            "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ": ["‡∏Ç‡∏≤‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏´‡∏±‡∏Å", "‡πÄ‡∏ö‡∏≤‡∏∞‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏û‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏á‡∏´‡∏•‡∏∏‡∏î"],
            "‡πÇ‡∏ï‡πä‡∏∞": ["‡∏Ç‡∏≤‡πÇ‡∏ï‡πä‡∏∞‡∏´‡∏±‡∏Å", "‡∏û‡∏∑‡πâ‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏°‡∏µ‡∏£‡∏≠‡∏¢", "‡πÇ‡∏ï‡πä‡∏∞‡πÇ‡∏¢‡∏Å"],
            "‡∏à‡∏≠‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå": ["‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏à‡∏≠‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÅ‡∏ï‡∏Å", "‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î"],
            "‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå": ["‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏†‡∏≤‡∏û‡πÄ‡∏ö‡∏•‡∏≠", "‡∏£‡∏µ‡πÇ‡∏°‡∏ó‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"],
            "‡∏ó‡∏µ‡∏ß‡∏µ": ["‡∏ó‡∏µ‡∏ß‡∏µ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏à‡∏≠‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î"],
            "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®": ["‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏¢‡πá‡∏ô", "‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏¢‡∏î", "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î"],
            "‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÑ‡∏•‡πÄ‡∏ã‡∏≠‡∏£‡πå": ["‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÅ‡∏™‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô"],
            "hub": ["‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"],
            "router": ["‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πâ‡∏≤"],
            "switch": ["‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á", "‡πÑ‡∏ü‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô"],
            "‡∏û‡∏≠‡∏¢‡πÄ‡∏ï‡∏≠‡∏£‡πå": ["‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏´‡∏°‡∏î", "‡πÅ‡∏™‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÄ‡∏™‡∏µ‡∏¢"],
            "‡πÄ‡∏°‡∏≤‡∏™‡πå": ["‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö", "‡∏™‡∏≤‡∏¢‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ä‡∏≥‡∏£‡∏∏‡∏î"],
            "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î": ["‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏∏‡∏î", "‡πÅ‡∏™‡∏á‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î"],
            "‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü": ["‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏´‡∏•‡∏ß‡∏°", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å"],
            "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡∏Ñ‡πå": ["‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢", "‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"],
            "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå": ["‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î", "‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•", "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á", "‡∏à‡∏≠‡∏ü‡πâ‡∏≤"]
        };

        if (problems[equipment]) {
            problems[equipment].forEach(problem => {
                const option = document.createElement("option");
                option.value = problem;
                option.textContent = problem;
                detailsSelect.appendChild(option);
            });
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
    imageInput.addEventListener("change", function (event) {
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                previewImage.src = e.target.result;
                previewImage.style.display = "block";
            };
            reader.readAsDataURL(file);
        } else {
            previewImage.style.display = "none";
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ equipment_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    async function getEquipmentId(equipmentName) {
        try {
            console.log(`üìå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ equipment_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${equipmentName}`);
            const response = await fetch(`http://localhost:3000/getEquipmentId?name=${encodeURIComponent(equipmentName)}`);
            if (!response.ok) throw new Error("Equipment not found");
            const data = await response.json();
            console.log(`‚úÖ Equipment ID: ${data.equipment_id}`);
            return data.equipment_id;
        } catch (error) {
            console.error("‚ùå Error fetching equipment ID:", error);
            return null;
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ room_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á
    async function getRoomId(roomName) {
        try {
            const response = await fetch(`http://localhost:3000/getRoomId?name=${encodeURIComponent(roomName)}`);
            if (!response.ok) throw new Error("Room not found");
            const data = await response.json();
            return data.room_id || null;
        } catch (error) {
            console.error("‚ùå Error fetching room ID:", error);
            return null;
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á repair_number ‡πÄ‡∏ä‡πà‡∏ô 414-12-5
    async function generateRepairNumber(roomId, equipmentId) {
        try {
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API /getLatestRepairNumber
            const response = await fetch(`http://localhost:3000/getLatestRepairNumber?room_id=${roomId}&equipment_id=${equipmentId}`);
            const data = await response.json();
            
            // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ latest_number ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ +1
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ 0 ‡∏à‡∏≤‡∏Å backend => +1 = 1
            return `${roomId}-${equipmentId}-${(data.latest_number || 0) + 1}`;
        } catch (error) {
            console.error("‚ùå Error fetching latest repair number:", error);
            // fallback
            return `${roomId}-${equipmentId}-1`;
        }
    }
    

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
    async function logout() {
        try {
            const response = await fetch("http://localhost:3000/logout", {
                method: "POST",
                credentials: "include"
            });
            if (response.ok) {
                alert("‚úÖ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                window.location.href = "login.html";
            } else {
                alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö");
            }
        } catch (error) {
            console.error("‚ùå Error logging out:", error);
            alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
        }
    }

    // ‡∏ú‡∏π‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
    const logoutButton = document.getElementById("logout-btn");
    if (logoutButton) {
        logoutButton.addEventListener("click", logout);
    }
});

document.addEventListener("DOMContentLoaded", async function () {
    await fetchUserInfo();
});

let sessionUserId = null;

async function fetchUserInfo() {
    try {
        console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô...");
        const response = await fetch("http://localhost:3000/session", {
            method: "GET",
            credentials: "include"
        });
        if (!response.ok) {
            throw new Error("Session expired");
        }
        const userSession = await response.json();
        console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", userSession);

        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• userSession.data ‡∏à‡∏∂‡∏á‡∏Ñ‡πà‡∏≠‡∏¢‡∏ô‡∏≥‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ sessionUserId
        if (userSession && userSession.data) {
            // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏¥‡∏™‡∏¥‡∏ï
            sessionUserId = userSession.data.student_id; 
            // ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ teacher_id
        } else {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
            window.location.href = "login.html";
        }

    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
        window.location.href = "login.html";
    }
}

async function logout() {
    try {
        console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö...");
        const response = await fetch("http://localhost:3000/logout", {
            method: "POST",
            credentials: "include"
        });
        if (response.ok) {
            console.log("‚úÖ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            alert("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            window.location.href = "login.html";
        } else {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö");
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
        }
    } catch (error) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
    }
}

async function getEquipmentId(equipmentName) {
    try {
        console.log(`üìå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ equipment_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${equipmentName}`);
        const response = await fetch(`http://localhost:3000/getEquipmentId?name=${encodeURIComponent(equipmentName)}`);
        if (!response.ok) throw new Error("Equipment not found");
        const data = await response.json();
        console.log(`‚úÖ Equipment ID: ${data.equipment_id}`);
        return data.equipment_id;
    } catch (error) {
        console.error("‚ùå Error fetching equipment ID:", error);
        return null;
    }
}

async function getRoomId(roomName) {
    try {
        const response = await fetch(`http://localhost:3000/getRoomId?name=${encodeURIComponent(roomName)}`);
        if (!response.ok) throw new Error("Room not found");
        const data = await response.json();
        return data.room_id || null;
    } catch (error) {
        console.error("‚ùå Error fetching room ID:", error);
        return null;
    }
}

async function generateRepairNumber(roomId, equipmentId) {
    try {
        const response = await fetch(`http://localhost:3000/getLatestRepairNumber?room_id=${roomId}&equipment_id=${equipmentId}`);
        const data = await response.json();
        return `${roomId}-${equipmentId}-${(data.latest_number || 0) + 1}`;
    } catch (error) {
        console.error("‚ùå Error fetching latest repair number:", error);
        return `${roomId}-${equipmentId}-1`;
    }
}

async function logout() {
    try {
        console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö...");
        const response = await fetch("http://localhost:3000/logout", {
            method: "POST",
            credentials: "include"
        });
        if (response.ok) {
            console.log("‚úÖ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            alert("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            window.location.href = "login.html";
        } else {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö");
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
        }
    } catch (error) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
    }
}

document.addEventListener("DOMContentLoaded", () => {
    const logoutButton = document.getElementById("logout-btn");
    if (logoutButton) {
        logoutButton.addEventListener("click", logout);
    }
});
